name: Update Package Version from Power Automate

on:
  workflow_dispatch:
    inputs:
      versionSDK:
        description: 'SDK Version'
        required: true
        type: string
      versionType:
        description: 'Version Type (major, minor, patch)'
        required: true
        type: choice
        options:
          - major
          - minor
          - patch
      packageName:
        description: 'Package Name'
        required: true
        type: string

jobs:
  update-version:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Setup Node.js
      uses: actions/setup-node@v5
      with:
        node-version: '18'
    
    - name: Update package.json express version
      run: |
        echo "📦 Before update:"
        npm pkg get dependencies.express
        
        echo ""
        echo "🔄 Updating express to version: ${{ inputs.versionSDK }}"
        npm pkg set dependencies.express="${{ inputs.versionSDK }}"
        
        echo ""
        echo "✅ After update:"
        npm pkg get dependencies.express
        
        echo ""
        echo "📄 Full dependencies section:"
        cat package.json | grep -A 3 '"dependencies"'
    
    - name: Install dependencies
      run: npm install
    
    - name: Check git status
      run: |
        echo "📊 Git status after changes:"
        git status
        echo "📝 Git diff:"
        git diff
    
    - name: Create Pull Request
      id: create_pr
      uses: peter-evans/create-pull-request@v6
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        branch: "bump-version-${{ inputs.versionType }}-${{ github.run_number }}"
        commit-message: "chore: update express to ${{ inputs.versionSDK }}"
        title: "chore: Update express to version ${{ inputs.versionSDK }}"
        add-paths: |
          package.json
          package-lock.json
        body: |
          ## 🚀 Version Update from Power Automate
          
          **Package Name:** `${{ inputs.packageName }}`
          **Version Type:** `${{ inputs.versionType }}`
          **SDK Version:** `${{ inputs.versionSDK }}`
          
          ### Changes:
          - ✅ Express Package updated
          - ✅ Version bumped (${{ inputs.versionType }})
          - ✅ SDK version added
          - ✅ Dependencies installed
          
          ---
          *Automated by Power Automate workflow*
        labels: |
          FromPowerAutomate
          ReadyToMerge
        assignees: ${{ github.actor }}
    
    - name: Get PR number from output
      id: get_pr
      run: |
        PR_NUMBER="${{ steps.create_pr.outputs.pull-request-number }}"
        echo "PR Number: $PR_NUMBER"
        if [ -z "$PR_NUMBER" ] || [ "$PR_NUMBER" == "" ]; then
          echo "❌ No PR was created (no changes detected or PR already exists)"
          exit 0
        fi
        echo "PR_NUMBER=$PR_NUMBER" >> $GITHUB_ENV
    
    #- name: Approve PR with different token
    #  run: |
    #    gh pr review ${{ env.PR_NUMBER }} --approve
    #  env:
    #    GH_TOKEN: ${{ secrets.APPROVER_TOKEN }}     
    
    - name: Auto-merge PR
      if: env.PR_NUMBER != ''
      run: |
        echo "🔀 Merging PR #${{ env.PR_NUMBER }}"
        gh pr merge ${{ env.PR_NUMBER }} --auto --squash --delete-branch
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Output results
      if: env.PR_NUMBER != ''
      run: |
        echo "✅ PR #${{ env.PR_NUMBER }} created and auto-merge enabled"
        echo "📦 Package: ${{ inputs.packageName }}"        
        echo "📱 SDK Version: ${{ inputs.versionSDK }}"
        echo "🔄 Version Type: ${{ inputs.versionType }}"
